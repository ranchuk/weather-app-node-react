{"version":3,"sources":["pictures/appLogo.png","apiMap.js","actions/types.js","actions/notificationAction.js","actions/autoCompleteAction.js","reducers/geoLocationReducer.js","reducers/geoPositionReducer.js","reducers/autoCompleteSearchReducer.js","reducers/currentCityReducer.js","reducers/favoritesReducer.js","reducers/notificationReducer.js","reducers/degreeReducer.js","reducers/index.js","store.js","utils.js","actions/currentCityAction.js","components/searchBar/searchBar.js","actions/degreeAction.js","components/menuBar/menuBar.js","actions/favoritesAction.js","components/currentCityWeather/todayWeather.js","components/currentCityWeather/fiveDaysforecast.js","components/currentCityWeather/currentCityWeather.js","components/home/home.js","components/favorites/favorites.js","actions/geoPositionAction.js","geoLocationAPI.js","components/Notifier/Notifier.js","App.js","serviceWorker.js","index.js","config.js"],"names":["module","exports","BASE_URL","API_KEY","geoPositionSearch","Latitude","Longitude","autoCompleteSearch","query","weatherByKey","key","SET_GEO_LOCATION","LOADING_GEO_LOCATION","ERROR_GEO_LOCATION","enqueueSnackbarAction","notification","type","options","Date","getTime","Math","random","closeSnackbarAction","dismissAll","enqueueSnackbar","closeSnackbar","autoCompleteSearchLoading","isLoading","payload","autoCompleteSearchError","err","dispatch","mockAutoCompleteData","Version","Key","Type","Rank","LocalizedName","Country","ID","AdministrativeArea","initialState","loading","errors","data","setLocalStorage","favorites","localStorage","setItem","JSON","stringify","defaultState","notifications","isCelsius","combineReducers","geoLocation","state","action","geoPosition","autoComplete","currentCity","newData","filter","city","cityInfo","map","dismissed","degreeType","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","debounced","_","a","config","isProduction","axios","get","autoCompleteSearchAPI","res","setTimeout","message","variant","Button","onClick","console","error","convertToF","celsius","fahrenheit","round","convertToC","currentCityAction","currentCityLoading","Promise","all","weatherByKeyAPI","todayWeather","fiveDayaWeather","weatherByKeyMockData","autoHideDuration","currentCityError","LocalObservationDateTime","EpochTime","WeatherText","WeatherIcon","HasPrecipitation","PrecipitationType","IsDayTime","Temperature","Metric","Value","Unit","UnitType","Imperial","MobileLink","Link","Headline","EffectiveDate","EffectiveEpochDate","Severity","Text","Category","EndDate","EndEpochDate","DailyForecasts","EpochDate","Minimum","Maximum","Day","Icon","IconPhrase","Night","Sources","PrecipitationIntensity","SearchBar","useDispatch","useState","setQuery","isOpen","setIsOpen","useSelector","onBlur","e","SearchInput","placeholder","onChange","target","value","test","anchorOrigin","vertical","horizontal","onFocus","SpinnerWrapper","CircularProgress","size","onSelect","styled","input","span","CitiesList","props","CitiesListStyle","index","CityItem","div","changeDegreeType","withRouter","pathname","history","location","MenuStyle","LogoStyle","src","require","width","height","SearchStyle","TempTypeButtom","className","name","id","htmlFor","LinkStyle","style","color","textDecoration","to","favoritesAction","add","fetchFavoritesWeatherLoading","fetchFavoritesWeatherError","FavoritesWeatherMockData","TodayWeather","isFavorite","length","find","favorite","TodayWeatherStyle","CityAndTempStyle","CityName","StickySide","IconStyle","fontSize","ImageAndStatus","WeatherStatus","Image","alt","img","days","FiveDaysForecast","ScrollWrapper","FiveDaysForecastStyle","weatherItem","DayStyle","DayStyleLineHeader","moment","getDay","DayStyleLine","KeyStyle","ValueStyle","CurrentCityWeather","CurrentCityWeatherStyle","Home","HomeWrapper","SpinnerText","Favorites","useEffect","asyncRequests","log","push","favoriteWeather","fetchFavoritesWeather","FavoritesPage","PageHeadline","NoFavoritesStyle","FavoritesWrapper","FavoriteItemWrapper","FavoriteItem","FavoriteTitle","startIcon","crd","isDefaultLocation","geoPositionSearchLoading","geoPositionSearchAPI","latitude","longitude","geoPositionMockData_DefaultLocation","geoPositionMockData","geoPositionSearchError","EnglishName","PrimaryPostalCode","Region","Level","LocalizedType","EnglishType","CountryID","TimeZone","Code","Name","GmtOffset","IsDaylightSaving","NextOffsetChange","GeoPosition","Elevation","IsAlias","SupplementalAdminAreas","DataSets","GeoLocation","navigator","geolocation","getCurrentPosition","pos","coords","accuracy","warn","code","enableHighAccuracy","timeout","maximumAge","displayed","Notifier","useSnackbar","React","forEach","includes","onClose","event","reason","myKey","onExited","removeSnackbar","parse","App","maxSnack","path","component","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16893fbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appLogo.ce57e147.png\";","const BASE_URL = \"https://dataservice.accuweather.com\"\r\nconst API_KEY = \"lriSh0MgYPuwlv7Hf3Zy1OJ0XzO3ZezC\"\r\n\r\nexport const geoPositionSearch = ({Latitude,Longitude}) => {\r\n    return `${BASE_URL}/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${Latitude},${Longitude}`\r\n}\r\nexport const autoCompleteSearch = (query) => {\r\n    return `${BASE_URL}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\n}\r\nexport const weatherByKey = (key) => {\r\n    return `${BASE_URL}/currentconditions/v1/${key}?apikey=${API_KEY}`\r\n}\r\nexport const fiveDatysForecasts = (key) => {\r\n    return `${BASE_URL}/forecasts/v1/daily/5day/${key}?apikey=${API_KEY}`\r\n}","export const SET_GEO_LOCATION = \"SET_GEO_LOCATION\";\r\nexport const LOADING_GEO_LOCATION = \"LOADING_GEO_LOCATION\";\r\nexport const ERROR_GEO_LOCATION = \"ERROR_GEO_LOCATION\";\r\n\r\nexport const SET_GEO_POSITION_KEY = \"SET_GEO_POSITION_KEY\";\r\nexport const LOADING_GEO_POSITION_KEY = \"LOADING_GEO_POSITION_KEY\";\r\nexport const ERROR_GEO_POSITION_KEY = \"LOADING_GEO_POSITION_KEY\";\r\n\r\nexport const SET_AUTO_COMPLETE = \"SET_AUTO_COMPLETE\";\r\nexport const LOADING_AUTO_COMPLETE = \"LOADING_AUTO_COMPLETE\";\r\nexport const ERROR_AUTO_COMPLETE = \"ERROR_AUTO_COMPLETE\";\r\n\r\nexport const SET_WEATHER_BY_KEY = \"SET_WEATHER_BY_KEY\";\r\nexport const LOADING_WEATHER_BY_KEY = \"LOADING_WEATHER_BY_KEY\";\r\nexport const ERROR_WEATHER_BY_KEY = \"ERROR_WEATHER_BY_KEY\";\r\n\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const NOTIFICATION_ADD_FAVORITES_SUCCESS = \"NOTIFICATION_ADD_FAVORITES_SUCCESS\";\r\nexport const NOTIFICATION_REMOVE_FAVORITES_SUCCESS = \"NOTIFICATION_REMOVE_FAVORITES_SUCCESS\";\r\n\r\n\r\nexport const SET_FAVORITES = \"SET_FAVORITES\";\r\nexport const LOADING_FAVORITES_WAETHER = \"LOADING_FAVORITES_WAETHER\";\r\nexport const SET_FAVORITES_WEATHER = \"SET_FAVORITES_WEATHER\";\r\nexport const ERROR_FAVORITES_WAETHER = \"ERROR_FAVORITES_WAETHER\";\r\n\r\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\n\r\nexport const CHANGE_DEGREE_TYPE = 'CHANGE_DEGREE_TYPE';","import {ENQUEUE_SNACKBAR,CLOSE_SNACKBAR,REMOVE_SNACKBAR} from './types'\r\n\r\nexport const enqueueSnackbarAction = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: ENQUEUE_SNACKBAR,\r\n        notification: {\r\n            ...notification,\r\n            key: key || new Date().getTime() + Math.random(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const closeSnackbarAction = key => ({\r\n    type: CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key,\r\n});\r\n\r\nexport const removeSnackbar = key => ({\r\n    type: REMOVE_SNACKBAR,\r\n    key,\r\n});\r\n\r\nexport const  enqueueSnackbar = (...args) => enqueueSnackbarAction(...args);\r\nexport const  closeSnackbar = (...args) => closeSnackbarAction(...args);","import {autoCompleteSearch as autoCompleteSearchAPI} from '../apiMap'\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {SET_AUTO_COMPLETE, LOADING_AUTO_COMPLETE, ERROR_AUTO_COMPLETE} from '../actions/types';\r\nimport { enqueueSnackbar, closeSnackbar } from './notificationAction';\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const autoCompleteSearch = (query) => async (dispatch) => {\r\n\r\n  dispatch(autoCompleteSearchLoading(true))\r\n  try{\r\n    // throw new Error('')\r\n    // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n\r\n    if(config.isProduction){\r\n      const res = await axios.get(autoCompleteSearchAPI(query))\r\n      dispatch({\r\n        type: SET_AUTO_COMPLETE,\r\n        payload: res.data\r\n      });\r\n      dispatch(autoCompleteSearchLoading(false))\r\n    }\r\n    else{\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_AUTO_COMPLETE,\r\n          payload: mockAutoCompleteData\r\n        });\r\n        dispatch(autoCompleteSearchLoading(false))\r\n      }, 500)\r\n    }\r\n  }\r\n  catch(err){\r\n    dispatch(enqueueSnackbar({\r\n      message: 'error fetching search information ',\r\n      options: {\r\n          key: new Date().getTime() + Math.random(),\r\n          variant: 'error',\r\n          action: key => (\r\n              <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n          ),\r\n      },\r\n    }))\r\n    console.error(err.message)\r\n    dispatch(autoCompleteSearchError(err))\r\n    dispatch(autoCompleteSearchLoading(false))\r\n  }\r\n};\r\n\r\nexport const autoCompleteSearchLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_AUTO_COMPLETE,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const autoCompleteSearchError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_AUTO_COMPLETE,\r\n    payload: err\r\n  };\r\n};\r\n\r\n\r\n\r\nconst mockAutoCompleteData=  [\r\n      {\r\n        Version: 1,\r\n        Key: '182536',\r\n        Type: 'City',\r\n        Rank: 10,\r\n        LocalizedName: 'Athens',\r\n        Country: {\r\n          ID: 'GR',\r\n          LocalizedName: 'Greece'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'I',\r\n          LocalizedName: 'Attica'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '316938',\r\n        Type: 'City',\r\n        Rank: 10,\r\n        LocalizedName: 'Ankara',\r\n        Country: {\r\n          ID: 'TR',\r\n          LocalizedName: 'Turkey'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: '06',\r\n          LocalizedName: 'Ankara'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '126995',\r\n        Type: 'City',\r\n        Rank: 11,\r\n        LocalizedName: 'Alexandria',\r\n        Country: {\r\n          ID: 'EG',\r\n          LocalizedName: 'Egypt'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'ALX',\r\n          LocalizedName: 'Alexandria'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '56912',\r\n        Type: 'City',\r\n        Rank: 13,\r\n        LocalizedName: 'Anqing',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AH',\r\n          LocalizedName: 'Anhui'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '59083',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Anyang',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'HA',\r\n          LocalizedName: 'Henan'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '102138',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Anshan',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'LN',\r\n          LocalizedName: 'Liaoning'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '202438',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Ahmedabad',\r\n        Country: {\r\n          ID: 'IN',\r\n          LocalizedName: 'India'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'GJ',\r\n          LocalizedName: 'Gujarat'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '2093',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Algiers',\r\n        Country: {\r\n          ID: 'DZ',\r\n          LocalizedName: 'Algeria'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: '16',\r\n          LocalizedName: 'Alger'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '126831',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Addis Ababa',\r\n        Country: {\r\n          ID: 'ET',\r\n          LocalizedName: 'Ethiopia'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AA',\r\n          LocalizedName: 'Addis Ababa'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '178551',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Accra',\r\n        Country: {\r\n          ID: 'GH',\r\n          LocalizedName: 'Ghana'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AA',\r\n          LocalizedName: 'Greater Accra'\r\n        }\r\n      }\r\n    ]","import {\r\n    SET_GEO_LOCATION,LOADING_GEO_LOCATION,ERROR_GEO_LOCATION\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    Latitude: null,\r\n    Longitude: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    Latitude: action.payload.Latitude,\r\n                    Longitude: action.payload.Longitude\r\n                };\r\n        case LOADING_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_GEO_POSITION_KEY, LOADING_GEO_POSITION_KEY, ERROR_GEO_POSITION_KEY} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_AUTO_COMPLETE, LOADING_AUTO_COMPLETE, ERROR_AUTO_COMPLETE} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_WEATHER_BY_KEY, LOADING_WEATHER_BY_KEY, ERROR_WEATHER_BY_KEY} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, SET_FAVORITES, SET_FAVORITES_WEATHER,LOADING_FAVORITES_WAETHER, ERROR_FAVORITES_WAETHER} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: [],\r\n    loading: false,\r\n    errors: []\r\n  };\r\n\r\n  const setLocalStorage = (favorites) => localStorage.setItem('favorites', JSON.stringify(favorites))\r\n  \r\n  export default function(state = initialState, action) {\r\n    let newData = []\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITES:\r\n            // if(state.data.length < 5) {\r\n                newData = [...state.data, action.payload]\r\n            // }\r\n            // else{\r\n            //     newData = [...state.data, action.payload]\r\n            //     newData.shift()\r\n            // }\r\n            setLocalStorage(newData)\r\n                return {\r\n                    ...state,\r\n                    data: newData,\r\n                };\r\n        case REMOVE_FROM_FAVORITES: \r\n                newData = state.data.filter((city)=>city.cityInfo.Key !== action.payload.cityInfo.Key)\r\n                setLocalStorage(newData)\r\n\r\n                return {\r\n                    ...state,\r\n                    data: newData\r\n                };\r\n        case SET_FAVORITES: \r\n                return {\r\n                    ...state,\r\n                    data: action.payload\r\n                }; \r\n        case SET_FAVORITES_WEATHER:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload\r\n                };\r\n        case LOADING_FAVORITES_WAETHER:\r\n                return {\r\n                    ...state,\r\n                     loading: action.payload\r\n                }; \r\n        case ERROR_FAVORITES_WAETHER:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors,action.payload]\r\n                }                        \r\n        default:\r\n                return state;\r\n    }\r\n  }","import {ENQUEUE_SNACKBAR,CLOSE_SNACKBAR,REMOVE_SNACKBAR} from '../actions/types'\r\n\r\nconst defaultState = {\r\n    notifications: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ENQUEUE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: [\r\n                    ...state.notifications,\r\n                    {\r\n                        key: action.key,\r\n                        ...action.notification,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(notification => (\r\n                    (action.dismissAll || notification.key === action.key)\r\n                        ? { ...notification, dismissed: true }\r\n                        : { ...notification }\r\n                )),\r\n            };\r\n\r\n        case REMOVE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(\r\n                    notification => notification.key !== action.key,\r\n                ),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import {NOTIFICATION_ADD_FAVORITES_SUCCESS, NOTIFICATION_REMOVE_FAVORITES_SUCCESS} from '../actions/types'\r\n\r\n  \r\n//   const initialState = {\r\n//     messages: []\r\n//   };\r\n  \r\n//   export default function(state = initialState, action) {\r\n//       let message = ''\r\n//     switch (action.type) {\r\n//         case NOTIFICATION_ADD_FAVORITES_SUCCESS:\r\n//                 message = `${action.payload} added to favorites`\r\n//                 return {\r\n//                     ...state,\r\n//                     messages: [...state.messages, {type:'success', message}],\r\n//                 };\r\n//         case NOTIFICATION_REMOVE_FAVORITES_SUCCESS:\r\n//                 message = `${action.payload} removed from favorites`\r\n//                 return {\r\n//                     ...state,\r\n//                     messages: [...state.messages, {type:'success', message}],\r\n//                 };\r\n//         default:\r\n//                 return state;\r\n//     }\r\n//   }","import {CHANGE_DEGREE_TYPE} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    isCelsius: true,\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_DEGREE_TYPE:\r\n                return {\r\n                    ...state,\r\n                    isCelsius: !state.isCelsius,\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import { combineReducers } from \"redux\";\r\nimport geoLocation from \"./geoLocationReducer\";\r\nimport geoPosition from './geoPositionReducer';\r\nimport autoCompleteSearch from './autoCompleteSearchReducer';\r\nimport currentCity from './currentCityReducer';\r\nimport favorites from './favoritesReducer';\r\nimport notifications from './notificationReducer';\r\nimport degreeReducer from './degreeReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    geoLocation,\r\n    geoPosition,\r\n    autoComplete: autoCompleteSearch,\r\n    currentCity,\r\n    favorites,\r\n    notifications,\r\n    degreeType: degreeReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\nexport default store;","import {autoCompleteSearch} from './actions/autoCompleteAction';\r\nimport store from \"./store\";\r\nimport * as _ from 'lodash';\r\n\r\n\r\nexport const debounced = _.debounce((query)=>{\r\n    return store.dispatch(autoCompleteSearch(query));\r\n  },200)\r\n\r\nexport const convertToF = (celsius) => {\r\n    let fahrenheit\r\n    // Only change code below this line\r\n    fahrenheit = (celsius * (9/5)) + 32 // fahenheit = celsius * 9/5 + 32 works too.\r\n    // Only change code above this line\r\n    return Math.round(fahrenheit);\r\n}\r\nexport const convertToC = (fahrenheit) => {\r\n  let celsius\r\n  // Only change code below this line\r\n  celsius = (fahrenheit - 32) /  (9/5)\r\n  // Only change code above this line\r\n  return Math.round(celsius);\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  enqueueSnackbar,closeSnackbar,\r\n} from './notificationAction';\r\nimport {fiveDatysForecasts as fiveDatysForecastsAPI, weatherByKey as weatherByKeyAPI} from '../apiMap'\r\n\r\nimport {SET_WEATHER_BY_KEY, LOADING_WEATHER_BY_KEY, ERROR_WEATHER_BY_KEY} from '../actions/types'\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const currentCityAction = (city) => async (dispatch) => {\r\n\r\n  dispatch(currentCityLoading(true))\r\n  try{\r\n\r\n    if (config.isProduction) {\r\n      const res = await Promise.all([axios.get(weatherByKeyAPI(city.Key)),axios.get(fiveDatysForecastsAPI(city.Key))])\r\n      const todayWeather = res[0].data[0]\r\n      const fiveDayaWeather = res[1].data\r\n  \r\n      dispatch({\r\n        type: SET_WEATHER_BY_KEY,\r\n        payload: {todayWeather,fiveDayaWeather,cityInfo:city}\r\n      });\r\n      dispatch(currentCityLoading(false))\r\n    }\r\n    else {\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_WEATHER_BY_KEY,\r\n          payload: {...weatherByKeyMockData, cityInfo:city}\r\n        });\r\n        dispatch(currentCityLoading(false))\r\n      },500)\r\n    }\r\n  }\r\n  catch(err){\r\n    dispatch(enqueueSnackbar({\r\n      message: 'error fetching weather information',\r\n      options: {\r\n          key: new Date().getTime() + Math.random(),\r\n          variant: 'error',\r\n          autoHideDuration: 2000,\r\n          action: key => (\r\n              <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n          ),\r\n      },\r\n    }))\r\n    console.error(err.message)\r\n    dispatch(currentCityError(err))\r\n    dispatch(currentCityLoading(false))\r\n  }\r\n};\r\n\r\nexport const currentCityLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_WEATHER_BY_KEY,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const currentCityError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_WEATHER_BY_KEY,\r\n    payload: err\r\n  };\r\n};\r\n\r\nconst weatherByKeyMockData = {\r\n    todayWeather: {\r\n      LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n      EpochTime: 1585344900,\r\n      WeatherText: 'Mostly clear',\r\n      WeatherIcon: 34,\r\n      HasPrecipitation: false,\r\n      PrecipitationType: null,\r\n      IsDayTime: false,\r\n      Temperature: {\r\n        Metric: {\r\n          Value: 16.9,\r\n          Unit: 'C',\r\n          UnitType: 17\r\n        },\r\n        Imperial: {\r\n          Value: 62,\r\n          Unit: 'F',\r\n          UnitType: 18\r\n        }\r\n      },\r\n      MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n      Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    },\r\n    fiveDayaWeather: {\r\n      Headline: {\r\n        EffectiveDate: '2020-03-28T08:00:00+03:00',\r\n        EffectiveEpochDate: 1585371600,\r\n        Severity: 5,\r\n        Text: 'Air quality will be unhealthy for sensitive groups Monday morning through Wednesday morning',\r\n        Category: 'rain',\r\n        EndDate: '2020-03-28T14:00:00+03:00',\r\n        EndEpochDate: 1585393200,\r\n        MobileLink: 'http://m.accuweather.com/en/il/porat/212568/extended-weather-forecast/212568?lang=en-us',\r\n        Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us'\r\n      },\r\n      DailyForecasts: [\r\n        {\r\n          Date: '2020-03-27T07:00:00+03:00',\r\n          EpochDate: 1585281600,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 60,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 76,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-28T07:00:00+03:00',\r\n          EpochDate: 1585368000,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 56,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 66,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 3,\r\n            IconPhrase: 'Partly sunny',\r\n            HasPrecipitation: true,\r\n            PrecipitationType: 'Rain',\r\n            PrecipitationIntensity: 'Light'\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=1&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=1&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-29T07:00:00+03:00',\r\n          EpochDate: 1585454400,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 55,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 66,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 33,\r\n            IconPhrase: 'Clear',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=2&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=2&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-30T07:00:00+03:00',\r\n          EpochDate: 1585540800,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 60,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 72,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=3&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=3&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-31T07:00:00+03:00',\r\n          EpochDate: 1585627200,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 59,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 81,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 3,\r\n            IconPhrase: 'Partly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 39,\r\n            IconPhrase: 'Partly cloudy w/ showers',\r\n            HasPrecipitation: true,\r\n            PrecipitationType: 'Rain',\r\n            PrecipitationIntensity: 'Light'\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=4&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=4&lang=en-us'\r\n        }\r\n      ]\r\n    }\r\n  }","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {debounced} from '../../utils'\r\nimport {currentCityAction} from '../../actions/currentCityAction'\r\nimport {SET_AUTO_COMPLETE} from '../../actions/types'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport styled from 'styled-components';\r\nimport {\r\n    enqueueSnackbar,closeSnackbar,\r\n  } from '../../actions/notificationAction';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch()\r\n    const [query, setQuery] = useState('')\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const autoComplete = useSelector((state) => state.autoComplete)\r\n    const isLoading = autoComplete.loading;\r\n\r\n    const onSelect = (city) => {\r\n        setQuery(city.LocalizedName)\r\n        setIsOpen(false)\r\n        dispatch(currentCityAction(city))\r\n    }\r\n\r\n    const onQueryChange = (e) => {\r\n        const query= e.target.value\r\n\r\n        if(query === '') {\r\n            setIsOpen(false)\r\n            setQuery(query)\r\n            dispatch({\r\n                type: SET_AUTO_COMPLETE,\r\n                payload: null\r\n            });\r\n        }\r\n\r\n        else if(/^[a-zA-Z\\s]+$/.test(query)){\r\n            if(query !== '') {\r\n                setQuery(query)\r\n                !isOpen && setIsOpen(true)\r\n                debounced(query)\r\n            }\r\n        }\r\n        else {\r\n            dispatch(enqueueSnackbar(\r\n                                            {\r\n                                                message: 'Invalid input. accept only english letters',\r\n                                                options: {\r\n                                                    key: new Date().getTime() + Math.random(),\r\n                                                    variant: 'error',\r\n                                                    autoHideDuration: 5000,\r\n                                                    action: key => (\r\n                                                        <Button onClick={() => dispatch(closeSnackbar(key))}>Close</Button>\r\n                                                    ),\r\n                                                    anchorOrigin: {\r\n                                                        vertical: 'top',\r\n                                                        horizontal: 'left',\r\n                                                    },\r\n                                                },\r\n                                            }\r\n                                    )\r\n                    )\r\n            //alert('Only english letters allowed')\r\n        }\r\n    }\r\n\r\n    return <div onBlur={(e)=>{setTimeout(()=>setIsOpen(false),100)}}>\r\n                        <SearchInput placeholder={'Search City'} onChange={onQueryChange} value={query} onFocus={(e)=>query !== '' && setIsOpen(true)}/>\r\n                        {isLoading ? <SpinnerWrapper><CircularProgress size={20}/></SpinnerWrapper> :\r\n                        isOpen && <CitiesList onSelect={onSelect}/>}\r\n            </div>\r\n}\r\n\r\nexport default SearchBar\r\n\r\nconst SearchInput = styled.input`\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    font-size: 2rem;\r\n    padding: 1rem;\r\n`;\r\nconst SpinnerWrapper = styled.span`\r\n    position:absolute;\r\n    right:20px;\r\n    top:12px;\r\n`;\r\n\r\nconst CitiesList = (props) => {\r\n    const autoComplete = useSelector((state) => state.autoComplete)\r\n\r\n    return <CitiesListStyle>{!autoComplete.loading && autoComplete.data && autoComplete.data.map((city, index)=>{\r\n                return <CityItem key={index} onClick={(e)=>props.onSelect(city)}><h3>{city.LocalizedName}</h3></CityItem>\r\n            })}\r\n    </CitiesListStyle>\r\n}\r\n\r\nconst CitiesListStyle = styled.div`\r\n    position: absolute;\r\n    z-index:1000;\r\n    animation-name: dropDownSlow;\r\n    animation-duration: 4s;\r\n    animation-timing-function: ease-out;\r\n    z-index: 1;\r\n    @keyframes dropDownSlow {\r\n        0% {\r\n            height: 0px;\r\n        }\r\n        100% {\r\n            height:100px;\r\n        }\r\n    }\r\n`\r\n\r\nconst CityItem = styled.div`\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    background-color:white;\r\n    width:26.5rem;\r\n    font-size: 1.5rem;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    :hover {\r\n        background-color: gainsboro;\r\n    }\r\n`;","import {CHANGE_DEGREE_TYPE} from '../actions/types'\r\n\r\nconst changeDegreeType = () => {\r\n    return {\r\n        type: CHANGE_DEGREE_TYPE\r\n    }\r\n}\r\n\r\nexport default changeDegreeType;","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport SearchBar from '../searchBar/searchBar.js';\r\nimport changeDegreeType from '../../actions/degreeAction'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst MenuBar = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {pathname} = props.history.location\r\n\r\n    const handleToggle = (e) => {\r\n        dispatch(changeDegreeType())\r\n    }\r\nreturn <MenuStyle>\r\n           <LogoStyle>\r\n            <img src={require(\"../../pictures/appLogo.png\")} width=\"100px\" height=\"100px\" />            \r\n       </LogoStyle>\r\n       {pathname !== '/favorites' ? <SearchStyle><SearchBar/></SearchStyle> : null}\r\n       <TempTypeButtom>\r\n       <div className=\"onoffswitch\">\r\n            <input type=\"checkbox\" name=\"onoffswitch\" className=\"onoffswitch-checkbox\" id=\"myonoffswitch\" onChange={handleToggle}/>\r\n            <label className=\"onoffswitch-label\" htmlFor=\"myonoffswitch\">\r\n                <span className=\"onoffswitch-inner\"></span>\r\n                <span className=\"onoffswitch-switch\"></span>\r\n            </label>\r\n        </div>\r\n        </TempTypeButtom>\r\n        <LinkStyle>\r\n            {pathname === '/favorites' ? \r\n              <Link style={{color:'#ffffff' , textDecoration: \"none\"}} to=\"/\">Home</Link>\r\n            : <Link style={{color: '#ffffff', textDecoration: \"none\"}} to=\"/favorites\">Favorites</Link>}\r\n       </LinkStyle>\r\n       </MenuStyle>\r\n}\r\n\r\nexport default withRouter(MenuBar)\r\n\r\n    const SearchStyle = styled.div`\r\n    z-index: 3;\r\n    position:absolute;\r\n    top:50%;\r\n    transform: translate(-50%, -50%);\r\n    left:50%;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                top:150%;\r\n    }\r\n`\r\nconst MenuStyle = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    width: 100%;\r\n    height:8rem;\r\n    padding:4rem;\r\n    @media screen \r\n            and (max-device-width: 768px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                /* font-size:2.5rem; */\r\n    }\r\n`;\r\n\r\nconst LinkStyle = styled.div`\r\nfont-size:2.5rem;\r\nposition:absolute;\r\ntop:50%;\r\ntransform: translateY(-50%);\r\nright:0rem;\r\nanimation: RightToLeft 2s;\r\n    @keyframes RightToLeft {\r\n            0% {\r\n                right:-3rem;\r\n                opacity: 0;\r\n            }\r\n            50% {\r\n                right: 1rem;\r\n                opacity: 0.8;\r\n            }\r\n            100% {\r\n                right:0rem;\r\n                opacity: 1;\r\n            }\r\n    }\r\n`;\r\nconst LogoStyle = styled.div`\r\n    position:absolute;\r\n    top:50%;\r\n    transform: translateY(-43%);\r\n    left:-1.6rem;\r\n\r\n    animation: leftToRight 2s;\r\n    @keyframes leftToRight {\r\n            0% {\r\n                left:-3rem;\r\n                opacity: 0;\r\n            }\r\n            50% {\r\n                left:-0.6rem;\r\n                opacity: 0.8;\r\n            }\r\n            100% {\r\n                left:-1.6rem;\r\n                opacity: 1;\r\n            }\r\n    }\r\n`;\r\n\r\nconst TempTypeButtom = styled.div`\r\n    position:absolute;\r\n    top:50%;\r\n    right:50%;\r\n    transform: translate(50%, -50%);\r\n    @media screen \r\n            and (min-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size:2rem;\r\n                top:120%;\r\n                right:0%;\r\n                transform: translate(0%,-50%);\r\n    }\r\n`","import { weatherByKey as weatherByKeyAPI} from '../apiMap'\r\nimport axios from 'axios'\r\nimport {\r\n  enqueueSnackbar,\r\n  closeSnackbar,\r\n} from './notificationAction';\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport config from '../config';\r\n\r\nimport {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, SET_FAVORITES, LOADING_FAVORITES_WAETHER, SET_FAVORITES_WEATHER, ERROR_FAVORITES_WAETHER} from '../actions/types'\r\nexport const favoritesAction = (city, add) => (dispatch) => {\r\n\r\n    if (!add) {\r\n        dispatch({\r\n            type: REMOVE_FROM_FAVORITES,\r\n            payload: city\r\n          });\r\n\r\n\r\n              dispatch(enqueueSnackbar({\r\n                message: `${city.cityInfo.LocalizedName} removed from favorites`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'warning',\r\n                    autoHideDuration: 2000,\r\n                    action: key => (\r\n                        <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n                    ),\r\n                },\r\n              }))\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: ADD_TO_FAVORITES,\r\n            payload: city\r\n        });\r\n        dispatch(enqueueSnackbar({\r\n          message: `${city.cityInfo.LocalizedName} added to favorites`,\r\n          options: {\r\n              key: new Date().getTime() + Math.random(),\r\n              variant: 'success',\r\n              autoHideDuration: 2000,\r\n              action: key => (\r\n                  <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n              ),\r\n          },\r\n        }))\r\n    }\r\n};\r\n\r\nexport const setFavorites = (favorites) => {\r\n    return{\r\n        type: SET_FAVORITES,\r\n        payload: favorites\r\n    };\r\n}\r\n\r\nexport const fetchFavoritesWeather = (favorites) => async (dispatch) => {\r\n    dispatch(fetchFavoritesWeatherLoading(true))\r\n  // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n\r\n  try{\r\n    if ( config.isProduction) {\r\n      const asyncRequests = []\r\n      for(let favorite of favorites){\r\n          console.log(favorite.cityInfo.Key)\r\n          asyncRequests.push(axios.get(weatherByKeyAPI(favorite.cityInfo.Key)))\r\n      }\r\n      const res = await Promise.all(asyncRequests)\r\n      console.log(res)\r\n      dispatch({\r\n          type: SET_FAVORITES_WEATHER,\r\n          payload: res.map((favoriteWeather, index)=>{return {...favorites[index],todayWeather: favoriteWeather.data[0] }})\r\n      });\r\n      dispatch(fetchFavoritesWeatherLoading(false))\r\n\r\n    }\r\n    else{\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_FAVORITES_WEATHER,\r\n          payload: favorites.map((favorite, index)=>{return {...favorite, todayWeather: FavoritesWeatherMockData[index].data[0]}})\r\n        });\r\n        dispatch(fetchFavoritesWeatherLoading(false))\r\n\r\n      },500)\r\n    }\r\n  }\r\n    catch(e){\r\n      dispatch(enqueueSnackbar({\r\n        message: 'error fetching favorites weather information',\r\n        options: {\r\n            key: new Date().getTime() + Math.random(),\r\n            variant: 'error',\r\n            autoHideDuration: 2000,\r\n            action: key => (\r\n                <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n            ),\r\n        },\r\n      }))\r\n        // dispatch(fetchFavoritesWeatherLoading(false))\r\n        dispatch(fetchFavoritesWeatherError(e))\r\n\r\n  }\r\n}\r\n\r\nexport const fetchFavoritesWeatherLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_FAVORITES_WAETHER,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const fetchFavoritesWeatherError = (err) => {\r\n    return {\r\n      type: ERROR_FAVORITES_WAETHER,\r\n      payload: err.message\r\n    };\r\n  };\r\n\r\nconst FavoritesWeatherMockData = [\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n      LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n      EpochTime: 1585344900,\r\n      WeatherText: 'Mostly clear',\r\n      WeatherIcon: 34,\r\n      HasPrecipitation: false,\r\n      PrecipitationType: null,\r\n      IsDayTime: false,\r\n      Temperature: {\r\n        Metric: {\r\n          Value: 16.9,\r\n          Unit: 'C',\r\n          UnitType: 17\r\n        },\r\n        Imperial: {\r\n          Value: 62,\r\n          Unit: 'F',\r\n          UnitType: 18\r\n        }\r\n      },\r\n      MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n      Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  }\r\n]","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport {convertToF} from '../../utils'\r\nimport { useDispatch } from 'react-redux'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport {favoritesAction} from '../../actions/favoritesAction'\r\n\r\nconst TodayWeather = ({currentCity, favorites}) => {\r\n    const dispatch = useDispatch()\r\n    const isCelsius = useSelector((state) => state.degreeType.isCelsius)\r\n    const isFavorite = currentCity && favorites.length > 0 && favorites.find((favorite)=>favorite.cityInfo.Key=== currentCity.cityInfo.Key)\r\n\r\n    const favoriteFunc = () => {\r\n        isFavorite ? dispatch(favoritesAction(currentCity, false)) : dispatch(favoritesAction(currentCity, true))\r\n    }\r\n    return   <TodayWeatherStyle>\r\n                         <CityAndTempStyle>\r\n                            <CityName>{currentCity && currentCity.cityInfo && currentCity.cityInfo.LocalizedName}</CityName>\r\n                            {isCelsius && <div>{Math.round(currentCity.todayWeather.Temperature.Metric.Value)}°C</div>}\r\n                            {!isCelsius && <div>{convertToF(currentCity.todayWeather.Temperature.Metric.Value)}°F</div>}\r\n                        </CityAndTempStyle>\r\n                        <StickySide onClick={()=>favoriteFunc()}>\r\n                                <IconStyle>{!isFavorite ? <FavoriteBorderIcon color={\"secondary\"} fontSize={\"inherit\"}/> :\r\n                                <FavoriteIcon color={\"secondary\"}  fontSize={\"inherit\"}/>}\r\n                                </IconStyle>\r\n                        </StickySide>\r\n                        <ImageAndStatus>\r\n                            <WeatherStatus>{currentCity.todayWeather.WeatherText}</WeatherStatus>\r\n                            <Image\r\n                            src={`https://developer.accuweather.com/sites/default/files/${\r\n                                currentCity.todayWeather.WeatherIcon < 10\r\n                                ? \"0\" + currentCity.todayWeather.WeatherIcon\r\n                                : currentCity.todayWeather.WeatherIcon\r\n                            }-s.png`}\r\n                            alt=\"icon\"\r\n                            />\r\n                            \r\n                        </ImageAndStatus>\r\n            </TodayWeatherStyle>\r\n\r\n}\r\n\r\nexport default TodayWeather\r\nconst IconStyle = styled.span`\r\n    position:absolute;\r\n    display:inline-block;\r\n    right: 0px;\r\n    top:50%;\r\n    display:flex;\r\n    align-items:center;\r\n    transform:translateY(-50%);\r\n`\r\nexport const StickySide = styled.div`\r\nfont-size:4rem;\r\nposition: absolute;\r\nborder-radius:1rem;\r\nwidth: 15rem ;\r\nheight:5rem;\r\nbackground-color:#ffffff;\r\ntransition: all .4s ease-in-out;\r\nanimation: mymove 6s infinite;\r\ntop:50%;\r\n\r\n&:hover {\r\n    transform: scale(1.1);\r\n    left: 0rem;\r\n}\r\ncursor: pointer;\r\n@media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                top:150%;\r\n    }\r\n@keyframes mymove {\r\n        0% {\r\n            left:-12rem;\r\n        }\r\n        30% {\r\n            left: -7rem;\r\n        }\r\n        70% {\r\n            left: -7rem;\r\n        }\r\n        100% {\r\n            left:-12rem;\r\n        }\r\n}\r\n`\r\nexport const ImageAndStatus = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content: space-between;\r\nfont-size:4rem;\r\ntransform:translateX(5%);\r\n`\r\nexport const Image = styled.img`\r\nwidth:10rem;\r\n@media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                width:7rem;\r\n    }\r\n`\r\nexport const WeatherStatus = styled.span`\r\n    text-transform: uppercase;\r\n    font-size: 3rem;\r\n    letter-spacing: 0.2rem;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size: 2rem;\r\n    }\r\n`\r\nexport const CityName = styled.span`\r\n    text-transform: uppercase;\r\n    display: block;\r\n    margin-right: 3rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                margin-right: 1rem;\r\n    }\r\n`\r\nexport const TodayWeatherStyle = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    color:#ffffff;\r\n    animation-name: fadeIn;\r\n    animation-duration: 2s;\r\n    animation-timing-function: ease-out;\r\n    z-index: 1;\r\n    @keyframes fadeIn {\r\n        0% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nexport const CityAndTempStyle = styled.div`\r\n    display:flex;\r\n    font-size: 6rem;\r\n    font-weight: 400;\r\n    letter-spacing: 0.5rem;\r\n    margin-bottom: 2rem;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size: 3rem;\r\n    }\r\n`","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport moment from 'moment'\r\nimport {convertToC} from '../../utils'\r\n// import {FiveDaysForecastStyle, DayStyle, DayStyleLineHeader, DayStyleLine} from './styles'\r\n\r\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst FiveDaysForecast = ({currentCity}) => {\r\n    const isCelsius = useSelector((state) => state.degreeType.isCelsius)\r\n\r\n    return <ScrollWrapper>\r\n                <FiveDaysForecastStyle>\r\n                    {currentCity && currentCity.fiveDayaWeather && currentCity.fiveDayaWeather.DailyForecasts.map((weatherItem, index)=>{\r\n                        return  <DayStyle key={index}>\r\n                                    <DayStyleLineHeader>{days[(new Date(moment(weatherItem.Date)).getDay())]}</DayStyleLineHeader>\r\n                                    {/* <DayStyleLine><KeyStyle>Day:</KeyStyle> <ValueStyle>{weatherItem.Day.IconPhrase}</ValueStyle></DayStyleLine>\r\n                                    <DayStyleLine><KeyStyle>Night:</KeyStyle> <ValueStyle>{weatherItem.Night.IconPhrase}</ValueStyle></DayStyleLine> */}\r\n                                    <DayStyleLine><KeyStyle>Max:</KeyStyle>  \r\n                                        {isCelsius && <ValueStyle>{convertToC(weatherItem.Temperature.Maximum.Value)}°C</ValueStyle>}\r\n                                        {!isCelsius && <ValueStyle>{weatherItem.Temperature.Maximum.Value}°F</ValueStyle>}\r\n                                    </DayStyleLine>\r\n                                    <DayStyleLine><KeyStyle>Min:</KeyStyle> \r\n                                        {isCelsius && <ValueStyle>{convertToC(weatherItem.Temperature.Minimum.Value)}°C</ValueStyle>}\r\n                                        {!isCelsius && <ValueStyle>{weatherItem.Temperature.Minimum.Value}°F</ValueStyle>}\r\n                                    </DayStyleLine>\r\n\r\n                                </DayStyle>\r\n                    })}\r\n                </FiveDaysForecastStyle>\r\n            </ScrollWrapper>\r\n\r\n}\r\n\r\nexport default FiveDaysForecast\r\nconst KeyStyle = styled.div`\r\nmargin-right:0.5rem;\r\n`\r\nconst ValueStyle = styled.div`\r\n`\r\nconst ScrollWrapper= styled.div`\r\nwidth: 100%;\r\npadding: 2rem;\r\nz-index: 1;\r\nbottom: 0px;\r\nanimation-name: fadeIn;\r\nanimation-duration: 2s;\r\n/* animation-timing-function: ease-out; */\r\n@media screen \r\n        and (max-device-width: 580px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n        }\r\n@media screen \r\n        and (min-device-width: 1049px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n            /* bottom: 0px; */\r\n        }\r\n    @keyframes fadeIn {\r\n        0% {\r\n            bottom: -10%;\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            bottom: 0px;\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nexport const FiveDaysForecastStyle = styled.div`\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        /* margin-top:10rem; */\r\n        @media screen \r\n        and (max-device-width: 1049px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n            overflow:scroll;\r\n            padding:1.5rem;\r\n        }\r\n`;\r\n\r\nexport const DayStyle = styled.div`        \r\n    padding: 2.5rem;\r\n    text-align:center;\r\n    font-size: 1.8rem;\r\n    height:15rem;\r\n    background-color:#ffffff;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); \r\n    flex-grow:1;\r\n    min-width:15rem;\r\n    width: 20%;\r\n    margin-right:2rem;\r\n    border-radius: 2rem;\r\n    /* letter-spacing: 0.1rem; */\r\n    font-weight: 400;\r\n`;\r\nexport const DayStyleLine = styled.div`\r\n    margin-bottom:1rem;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items: center;\r\n`;\r\nexport const DayStyleLineHeader = styled.div`\r\nmargin-bottom:1rem;\r\nfont-size: 2.5rem;\r\nfont-weight: 600;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {favoritesAction} from '../../actions/favoritesAction'\r\nimport styled from 'styled-components'\r\nimport TodayWeather from './todayWeather';\r\nimport FiveDaysForecast from './fiveDaysforecast';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst CurrentCityWeather = () => {\r\n    const dispatch = useDispatch()\r\n    const {data: currentCity} = useSelector((state) => state.currentCity)\r\n    const favorites = useSelector((state) => state.favorites.data)\r\n\r\n    return <CurrentCityWeatherStyle>\r\n                <TodayWeather currentCity={currentCity} favorites={favorites}/>\r\n                <FiveDaysForecast currentCity={currentCity}/>\r\n            </CurrentCityWeatherStyle>\r\n}\r\n\r\nexport default CurrentCityWeather\r\n\r\nconst CurrentCityWeatherStyle = styled.div`\r\n    margin-top:5rem;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) {     \r\n            margin-top:10rem;\r\n    }\r\n`","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport styled from 'styled-components'\r\nimport CurrentCityWeather from '../currentCityWeather/currentCityWeather.js'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst Home = () => {\r\n    const currentCity = useSelector((state) => state.currentCity)\r\n\r\n    return <HomeWrapper>\r\n            {currentCity.loading || currentCity.data === null ? \r\n            <SpinnerWrapper>\r\n                <CircularProgress color='inherit' size='6rem' /> \r\n                <SpinnerText>Loading weather data...</SpinnerText>\r\n            </SpinnerWrapper> \r\n            : \r\n              <CurrentCityWeather className=\"CurrentCityWeatherStyle\" />}\r\n           </HomeWrapper>\r\n}\r\n\r\nexport default Home\r\n\r\nconst HomeWrapper = styled.div`\r\n    height: 100%;\r\n`\r\nexport const SpinnerWrapper = styled.div`\r\n    position: absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n    text-align:center;\r\n    color:#ffffff;\r\n`\r\nexport const SpinnerText = styled.div`\r\nmargin-top:1rem;\r\ncolor:#ffffff;\r\nfont-size:3rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size:2rem;\r\n    }\r\n`\r\n\r\n","import React, { useEffect } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport {fetchFavoritesWeather} from '../../actions/favoritesAction'\r\nimport {favoritesAction} from '../../actions/favoritesAction'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {currentCityAction} from '../../actions/currentCityAction';\r\nimport {convertToF} from '../../utils'\r\nimport { SpinnerWrapper, SpinnerText} from '../home/home'\r\nconst Favorites = (props) => {\r\n    const dispatch = useDispatch()\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const isCelsius = useSelector((state) => state.degreeType.isCelsius)\r\n\r\n    useEffect(()=>{\r\n        favorites.data.length > 0 && dispatch(fetchFavoritesWeather(favorites.data))\r\n    },[])\r\n\r\nreturn <FavoritesPage> \r\n                <PageHeadline>Favorites</PageHeadline>\r\n                {favorites.data.length === 0 ? \r\n                <NoFavoritesStyle>No Favorites Selected</NoFavoritesStyle> :\r\n                 favorites.loading ? \r\n                <SpinnerWrapper>\r\n                    <CircularProgress color='inherit' size='6rem'/>\r\n                    <SpinnerText>Loading weather data...</SpinnerText>\r\n                </SpinnerWrapper> : (\r\n                <FavoritesWrapper>\r\n                        {favorites.data.map((favorite, index)=>{\r\n                        return <FavoriteItemWrapper key={index}>\r\n                                    <FavoriteItem onClick={(e)=> {dispatch(currentCityAction(favorite.cityInfo)); props.history.push('/')}}>\r\n                                    <CityAndTempStyle>\r\n                                        <FavoriteTitle>{favorite.cityInfo.LocalizedName}</FavoriteTitle>\r\n                                        {isCelsius && <span>{Math.round(favorite.todayWeather.Temperature.Metric.Value)}°C</span>}\r\n                                        {!isCelsius && <span>{convertToF(favorite.todayWeather.Temperature.Metric.Value)}°F</span>}\r\n                                    </CityAndTempStyle>\r\n\r\n                                        <ImageAndStatus>\r\n                                            <span>{favorite.todayWeather.WeatherText}</span>\r\n                                                <Image\r\n                                                src={`https://developer.accuweather.com/sites/default/files/${\r\n                                                    favorite.todayWeather.WeatherIcon < 10\r\n                                                    ? \"0\" + favorite.todayWeather.WeatherIcon\r\n                                                    : favorite.todayWeather.WeatherIcon\r\n                                                }-s.png`}\r\n                                                alt=\"icon\"\r\n                                                />\r\n                                        </ImageAndStatus>\r\n                                    </FavoriteItem>\r\n                                    <Button onClick={(e)=>dispatch(favoritesAction(favorite, false))} variant=\"contained\" color=\"secondary\" fontSize=\"inherit\" startIcon={<DeleteIcon />}><span>Remove from Favorite</span></Button>\r\n                                </FavoriteItemWrapper>})}\r\n               </FavoritesWrapper>)}\r\n        </FavoritesPage>\r\n}\r\n\r\nexport default Favorites\r\nexport const ImageAndStatus = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content: space-around;\r\nfont-size:2.5rem;\r\ntransform: translateX(5%);\r\n@media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size:2rem;\r\n    }\r\n`\r\nexport const Image = styled.img`\r\nwidth:10rem;\r\n`\r\nconst NoFavoritesStyle = styled.div`\r\n    color:#ffffff;\r\n    position: absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n    font-size: 3rem;\r\n`\r\n// const SpinnerWrapper = styled.div`\r\n//     position: absolute;\r\n//     left:50%;\r\n//     top:50%;\r\n//     transform: translate(-50%,-50%);\r\n//     text-align: center;\r\n// `\r\n// export const SpinnerText = styled.div`\r\n// margin-top:10px;\r\n// `\r\nconst FavoritesPage = styled.div`\r\n    margin-top: 0rem;\r\n    text-align: center;\r\n`\r\nconst PageHeadline = styled.span`\r\ndisplay:inline-block;\r\nmargin-bottom: 5rem;\r\ncolor:#ffffff;\r\n    font-size: 4.5rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) {     \r\n            font-size: 3rem;\r\n            margin-bottom: 3rem;\r\n\r\n    }\r\n`\r\nconst FavoritesWrapper = styled.div`\r\n                font-size: 1.5rem;\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-content:space-between;\r\n`;\r\nconst FavoriteItemWrapper = styled.div`\r\n    border:0.1rem solid #ffffff;\r\n    border-radius: 1.5rem;\r\n    margin:2rem;\r\n    text-align:center;\r\n    padding:2rem;\r\n    cursor:pointer;\r\n\r\n    font-size: 1.4rem;\r\n    background-color:#ffffff;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); \r\n    min-width:15rem;\r\n    max-width:20rem;\r\n\r\n    transition: all .4s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\nconst FavoriteItem = styled.div`\r\n    cursor:pointer;\r\n    margin-bottom:30px;\r\n`;\r\n\r\nconst FavoriteTitle = styled.span`\r\n    display:block;\r\n`\r\n\r\nconst ImageAndTemp = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size:25px;\r\n`\r\n\r\nexport const CityAndTempStyle = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    font-size: 2.5rem;\r\n    margin-bottom: 1rem;\r\n    justify-content: space-around;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size: 2rem;\r\n    }\r\n`","import {geoPositionSearch as geoPositionSearchAPI} from '../apiMap'\r\nimport {currentCityAction} from '../actions/currentCityAction'\r\nimport {SET_GEO_POSITION_KEY, LOADING_GEO_POSITION_KEY, ERROR_GEO_POSITION_KEY} from '../actions/types'\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const geoPositionSearch = (crd, isDefaultLocation) => {\r\n  return async (dispatch) => {\r\n    dispatch(geoPositionSearchLoading(true));\r\n    try {\r\n      // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n      if ( config.isProduction ) {\r\n        const res = await axios.get(geoPositionSearchAPI({Latitude: crd.latitude, Longitude: crd.longitude}))\r\n        dispatch({\r\n          type: SET_GEO_POSITION_KEY,\r\n          payload: isDefaultLocation ? geoPositionMockData_DefaultLocation : res.data\r\n        });\r\n        dispatch(geoPositionSearchLoading(false));\r\n        dispatch(currentCityAction((isDefaultLocation ? geoPositionMockData_DefaultLocation : res.data)));\r\n      }\r\n      else {\r\n        dispatch({\r\n          type: SET_GEO_POSITION_KEY,\r\n          payload: isDefaultLocation ? geoPositionMockData_DefaultLocation : geoPositionMockData\r\n        });\r\n        dispatch(geoPositionSearchLoading(false));\r\n        dispatch(currentCityAction(isDefaultLocation ? geoPositionMockData_DefaultLocation : geoPositionMockData))\r\n      }\r\n  \r\n    }\r\n    catch (err) {\r\n      console.error(err.message);\r\n      dispatch(geoPositionSearchError(err));\r\n      dispatch(geoPositionSearchLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const geoPositionSearchLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_GEO_POSITION_KEY,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const geoPositionSearchError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_GEO_POSITION_KEY,\r\n    payload: err\r\n  };\r\n};\r\n\r\nconst geoPositionMockData = {\r\n    Version: 1,\r\n    Key: '212568',\r\n    Type: 'City',\r\n    Rank: 75,\r\n    LocalizedName: 'Porat',\r\n    EnglishName: 'Porat',\r\n    PrimaryPostalCode: '',\r\n    Region: {\r\n      ID: 'MEA',\r\n      LocalizedName: 'Middle East',\r\n      EnglishName: 'Middle East'\r\n    },\r\n    Country: {\r\n      ID: 'IL',\r\n      LocalizedName: 'Israel',\r\n      EnglishName: 'Israel'\r\n    },\r\n    AdministrativeArea: {\r\n      ID: 'M',\r\n      LocalizedName: 'Central District',\r\n      EnglishName: 'Central District',\r\n      Level: 1,\r\n      LocalizedType: 'District',\r\n      EnglishType: 'District',\r\n      CountryID: 'IL'\r\n    },\r\n    TimeZone: {\r\n      Code: 'IDT',\r\n      Name: 'Asia/Jerusalem',\r\n      GmtOffset: 3,\r\n      IsDaylightSaving: true,\r\n      NextOffsetChange: '2020-10-24T23:00:00Z'\r\n    },\r\n    GeoPosition: {\r\n      Latitude: 32.267,\r\n      Longitude: 34.95,\r\n      Elevation: {\r\n        Metric: {\r\n          Value: 80,\r\n          Unit: 'm',\r\n          UnitType: 5\r\n        },\r\n        Imperial: {\r\n          Value: 262,\r\n          Unit: 'ft',\r\n          UnitType: 0\r\n        }\r\n      }\r\n    },\r\n    IsAlias: false,\r\n    SupplementalAdminAreas: [],\r\n    DataSets: [\r\n      'AirQualityCurrentConditions',\r\n      'AirQualityForecasts',\r\n      'Alerts',\r\n      'ForecastConfidence'\r\n    ]\r\n  }\r\n\r\n\r\n  const geoPositionMockData_DefaultLocation = {\r\n    Version: 1,\r\n    Key: '212568',\r\n    Type: 'City',\r\n    Rank: 75,\r\n    LocalizedName: 'Tel Aviv',\r\n    EnglishName: 'Tel Aviv',\r\n    PrimaryPostalCode: '',\r\n    Region: {\r\n      ID: 'MEA',\r\n      LocalizedName: 'Middle East',\r\n      EnglishName: 'Middle East'\r\n    },\r\n    Country: {\r\n      ID: 'IL',\r\n      LocalizedName: 'Israel',\r\n      EnglishName: 'Israel'\r\n    },\r\n    AdministrativeArea: {\r\n      ID: 'M',\r\n      LocalizedName: 'Central District',\r\n      EnglishName: 'Central District',\r\n      Level: 1,\r\n      LocalizedType: 'District',\r\n      EnglishType: 'District',\r\n      CountryID: 'IL'\r\n    },\r\n    TimeZone: {\r\n      Code: 'IDT',\r\n      Name: 'Asia/Jerusalem',\r\n      GmtOffset: 3,\r\n      IsDaylightSaving: true,\r\n      NextOffsetChange: '2020-10-24T23:00:00Z'\r\n    },\r\n    GeoPosition: {\r\n      Latitude: 32.267,\r\n      Longitude: 34.95,\r\n      Elevation: {\r\n        Metric: {\r\n          Value: 80,\r\n          Unit: 'm',\r\n          UnitType: 5\r\n        },\r\n        Imperial: {\r\n          Value: 262,\r\n          Unit: 'ft',\r\n          UnitType: 0\r\n        }\r\n      }\r\n    },\r\n    IsAlias: false,\r\n    SupplementalAdminAreas: [],\r\n    DataSets: [\r\n      'AirQualityCurrentConditions',\r\n      'AirQualityForecasts',\r\n      'Alerts',\r\n      'ForecastConfidence'\r\n    ]\r\n  }","import store from \"./store\";\r\nimport { SET_GEO_LOCATION, LOADING_GEO_LOCATION,ERROR_GEO_LOCATION } from './actions/types'\r\nimport {geoPositionSearch} from './actions/geoPositionAction'\r\n\r\nconst GeoLocation = () => {\r\n    store.dispatch(geoPositionSearch({latitude: 32.0853,longitude: 34.7818}, true)) // default Tel aviv\r\n\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n    \r\n    function success(pos) {\r\n      var crd = pos.coords;\r\n    \r\n      console.log('Your current position is:');\r\n      console.log(`Latitude : ${crd.latitude}`);\r\n      console.log(`Longitude: ${crd.longitude}`);\r\n      console.log(`More or less ${crd.accuracy} meters.`);\r\n    \r\n      store.dispatch({type: SET_GEO_LOCATION, payload: {Latitude: crd.latitude,Longitude: crd.longitude}})\r\n      store.dispatch({type: LOADING_GEO_LOCATION, payload: false})\r\n      store.dispatch(geoPositionSearch({latitude: crd.latitude,longitude: crd.longitude}))\r\n    }\r\n    \r\n    function error(err) {\r\n       store.dispatch({type: ERROR_GEO_LOCATION, payload: err.message})\r\n       store.dispatch({type: LOADING_GEO_LOCATION, payload: false})\r\n\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n    store.dispatch({type: LOADING_GEO_LOCATION, payload: true})\r\n    navigator.geolocation.getCurrentPosition(success, error, options);\r\n}\r\n\r\nexport default GeoLocation","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../actions/notificationAction';\r\n\r\nlet displayed = [];\r\n\r\nconst Notifier = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications = useSelector(state => state.notifications.notifications || []);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id];\r\n    };\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // removen this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey));\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default Notifier;\r\n","import React from 'react';\nimport './App.css';\nimport Menu from './components/menuBar/menuBar.js'\nimport Home from './components/home/home.js'\nimport Favorites from './components/favorites/favorites.js'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport GeoLocation from './geoLocationAPI'\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {setFavorites} from './actions/favoritesAction'\nimport { SnackbarProvider } from 'notistack';\nimport Notifier from './components/Notifier/Notifier';\nGeoLocation()\n\nif (localStorage.favorites) {\n  store.dispatch(setFavorites(JSON.parse(localStorage.favorites)));\n}\n\nfunction App () {\n    return (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={4}>\n      <Notifier />\n        <BrowserRouter>\n            <Menu/>\n            <Route\n              path=\"/\"\n              component={Home}\n              exact\n            />\n            <Route\n              path=\"/favorites\"\n              component={Favorites}\n              exact\n            />\n        </BrowserRouter>\n      </SnackbarProvider>\n    </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    isProduction: true\r\n}"],"sourceRoot":""}